pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        //retry(1)
    }
    parameters{
        choice(name: 'ENVIRONMENT', choices: ['dev', 'qa', 'uat', 'pre-prod', 'prod'], description: 'Please select any one Environment')
        string(name: 'version', description: 'Please provide the version number with which you want to deploy the app in selected environment')

    }
    environment {
        appVersion = '' // this will become global, we can use across pipeline
        region = 'us-east-1'
        account_id = '022499022353'
        project = 'expense'
        environment = ''
        component = 'backend'
    }

    stages {
        
        stage('Deploy'){
            steps{
                withAWS(region: 'us-east-1', credentials: 'aws-creds') { // by default dev environment
                    sh """
                        aws eks update-kubeconfig --region ${region} --name ${project}-dev 
                        cd helm
                        sed -i 's/IMAGE_VERSION/$appVersion/g' values-${environment}.yaml
                        helm upgrade --install ${component} -n ${project} -f values-${environment}.yaml .
                    """
                }
                
            }
            // steps{
            //     withAWS(region: 'us-east-1', credentials: 'aws-creds') {
            //         sh """
            //             aws eks update-kubeconfig --region ${region} --name ${project}-${ params.ENVIRONMENT }
            //             cd helm
            //             sed -i 's/IMAGE_VERSION/$appVersion/g' values-${ params.ENVIRONMENT }.yaml
            //             helm upgrade --install ${component} -n ${project} -f values-${ params.ENVIRONMENT }.yaml .
            //         """
            //     }
                
            // }
        }
    }

    post {
        always{
            echo "This sections runs always"
            deleteDir()
        }
        success{
            echo "This section run when pipeline success"
        }
        failure{
            echo "This section run when pipeline failure"
        }
    }
}